spring:
  application:
    name: number-verification-service
  
  # MongoDB Configuration
  data:
    mongodb:
      uri: ${MONGO_URL:mongodb://localhost:27017/verification}
      database: verification
  
  # Redis Configuration
  redis:
    host: ${REDISHOST:localhost}
    port: ${REDISPORT:6379}
    password: ${REDISPASSWORD:}
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null
    mapper:
      accept-case-insensitive-enums: true
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 600000  # 10 minutes
      cache-null-values: false
  
  # Actuator Configuration
  management:
    endpoints:
      web:
        exposure:
          include: health,info,prometheus,metrics
    metrics:
      export:
        prometheus:
          enabled: true
    endpoint:
      health:
        show-details: when_authorized

# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

# Logging Configuration
logging:
  level:
    root: INFO
    com.motive.numberverification: ${LOG_LEVEL:DEBUG}
    org.springframework.web: INFO
    org.springframework.data.mongodb: INFO
    org.springframework.cache: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/number-verification.log}

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  packages-to-scan: com.motive.numberverification.api

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:00a28fca21c9662c7d9d3adc91eea71da1b474f6aa6603add776cc2ce4a44ed9}
  rate-limiting:
    requests-per-minute: ${RATE_LIMIT:60}

# Telecom Provider Configuration
telecom:
  provider:
    primary:
      url: ${PRIMARY_PROVIDER_URL:https://api.telecom-provider.com}
      key: ${PRIMARY_PROVIDER_KEY:dummy-api-key}
    fallback:
      url: ${FALLBACK_PROVIDER_URL:https://api.fallback-provider.com}
      key: ${FALLBACK_PROVIDER_KEY:dummy-fallback-key}

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      telecomProvider:
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3
        registerHealthIndicator: true
  retry:
    instances:
      telecomProvider:
        maxAttempts: 3
        waitDuration: 500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2